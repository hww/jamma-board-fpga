DEF my4BREG.
PIN dd_in<0>;
  BUS:3,
  ENM:'dd_in[3:0]'.
PIN CoinCounter_c<1>;
  BUS:1,
  ENM:'CoinCounter_c[2:1]'.
PIN dd_in<3>;
  BUS:0,
  ENM:'dd_in[3:0]'.
PIN CoinLockout_c<2>;
  BUS:0,
  ENM:'CoinLockout_c[2:1]'.
PIN dd_in<2>;
  BUS:1,
  ENM:'dd_in[3:0]'.
PIN CoinLockout_c<1>;
  BUS:1,
  ENM:'CoinLockout_c[2:1]'.
PIN dd_in<1>;
  BUS:2,
  ENM:'dd_in[3:0]'.
NET cmd5N;;
  ENM:cmd5N_1_net.
NET nDiow_c;;
  ENM:nDiow_c_1_net.
NET nReset_c_3;;
  ENM:nReset_c_3_1_net.
PIN CoinCounter_c<2>;
  BUS:0,
  ENM:'CoinCounter_c[2:1]'.
END.
DEF myDFFE2_1.
PIN dd_in<1>;
  BUS:6,
  ENM:'dd_in[7:0]'.
PIN dd_in<6>;
  BUS:1,
  ENM:'dd_in[7:0]'.
PIN dd_in<7>;
  BUS:0,
  ENM:'dd_in[7:0]'.
PIN dd_in<3>;
  BUS:4,
  ENM:'dd_in[7:0]'.
NET cmd6N_0;;
  ENM:cmd6N_0_1_net.
PIN da_c<0>;
  BUS:1,
  ENM:'da_c[1:0]'.
NET y_11;;
  ENM:y_11_1_net.
NET bDevice;;
  ENM:bDevice_1_net.
PIN da_c<1>;
  BUS:0,
  ENM:'da_c[1:0]'.
PIN dd_in<0>;
  BUS:7,
  ENM:'dd_in[7:0]'.
PIN dd_in<4>;
  BUS:3,
  ENM:'dd_in[7:0]'.
PIN dd_in<2>;
  BUS:5,
  ENM:'dd_in[7:0]'.
PIN dd_in<5>;
  BUS:2,
  ENM:'dd_in[7:0]'.
NET nDiow_c;;
  ENM:nDiow_c_1_net.
NET nReset_c_3;;
  ENM:nReset_c_3_1_net.
NET key1;;
  ENM:key1_1_net.
END.
DEF dc.
NET bDevice;;
  ENM:bDevice_1_net.
NET y_1;;
  ENM:y_1_1_net.
NET acces;;
  ENM:acces_1_net.
NET csDataReg;;
  ENM:csDataReg_1_net.
NET y_10;;
  ENM:y_10_1_net.
NET y_11;;
  ENM:y_11_1_net.
PIN da_c<0>;
  BUS:2,
  ENM:'da_c[2:0]'.
PIN da_c<2>;
  BUS:0,
  ENM:'da_c[2:0]'.
PIN da_c<1>;
  BUS:1,
  ENM:'da_c[2:0]'.
NET nCS1_c;;
  ENM:nCS1_c_1_net.
NET nCS0_c;;
  ENM:nCS0_c_1_net.
NET csDevReg;;
  ENM:csDevReg_1_net.
END.
DEF my16COUNTER.
NET N_14_0;;
  ENM:N_14_0_1_net.
NET N_509_n;;
  ENM:N_509_n_1_net.
NET N_501;;
  ENM:N_501_1_net.
NET N_510_n;;
  ENM:N_510_n_1_net.
NET N_502;;
  ENM:N_502_1_net.
NET N_14;;
  ENM:N_14_1_net.
NET N_511_n;;
  ENM:N_511_n_1_net.
NET cmd6N_0;;
  ENM:cmd6N_0_1_net.
NET cmd6N_0_0;;
  ENM:cmd6N_0_0_1_net.
NET nReset_c_5;;
  ENM:nReset_c_5_1_net.
PIN count<12>;
  BUS:3,
  ENM:'count[15:1]'.
PIN count<15>;
  BUS:0,
  ENM:'count[15:1]'.
PIN count<14>;
  BUS:1,
  ENM:'count[15:1]'.
NET cmd6N;;
  ENM:cmd6N_1_net.
NET nDiow_c;;
  ENM:nDiow_c_1_net.
NET nReset_c;;
  ENM:nReset_c_1_net.
PIN count<13>;
  BUS:2,
  ENM:'count[15:1]'.
PIN count<8>;
  BUS:7,
  ENM:'count[15:1]'.
PIN count<9>;
  BUS:6,
  ENM:'count[15:1]'.
PIN count<10>;
  BUS:5,
  ENM:'count[15:1]'.
PIN count<11>;
  BUS:4,
  ENM:'count[15:1]'.
NET y_55;;
  ENM:y_55_1_net.
PIN count<4>;
  BUS:11,
  ENM:'count[15:1]'.
PIN count<5>;
  BUS:10,
  ENM:'count[15:1]'.
PIN count<6>;
  BUS:9,
  ENM:'count[15:1]'.
PIN count<7>;
  BUS:8,
  ENM:'count[15:1]'.
NET y_56;;
  ENM:y_56_1_net.
NET word;;
  ENM:word_1_net.
PIN count<1>;
  BUS:14,
  ENM:'count[15:1]'.
PIN count<2>;
  BUS:13,
  ENM:'count[15:1]'.
PIN count<3>;
  BUS:12,
  ENM:'count[15:1]'.
NET y_57;;
  ENM:y_57_1_net.
END.
DEF myFRONTEXTRACTOR_2.
NET riseA_n;;
  ENM:riseA_n_1_net.
NET nReset_c_1;;
  ENM:nReset_c_1_1_net.
NET nDior_c_i_0;;
  ENM:nDior_c_i_0_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_0;;
  ENM:nReset_c_0_1_net.
END.
DEF myFRONTEXTRACTOR_3.
PIN rise<1>;
  BUS:0,
  ENM:'rise[1:0]'.
NET nDior_c_i_0;;
  ENM:nDior_c_i_0_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_1;;
  ENM:nReset_c_1_1_net.
PIN rise<0>;
  BUS:1,
  ENM:'rise[1:0]'.
END.
DEF myREVCOUNTER_1.
NET cnt_6_4;;
  ENM:cnt_6_4_1_net.
PIN ballCnt1q<6>;
  BUS:0,
  ENM:'ballCnt1q[6:0]'.
NET s5i;;
  ENM:s5i_1_net.
PIN ballCnt1q<5>;
  BUS:1,
  ENM:'ballCnt1q[6:0]'.
NET s4i;;
  ENM:s4i_1_net.
PIN ballCnt1q<4>;
  BUS:2,
  ENM:'ballCnt1q[6:0]'.
NET cnt_6_1;;
  ENM:cnt_6_1_1_net.
PIN ballCnt1q<3>;
  BUS:3,
  ENM:'ballCnt1q[6:0]'.
NET cnt_6_0;;
  ENM:cnt_6_0_1_net.
PIN ballCnt1q<2>;
  BUS:4,
  ENM:'ballCnt1q[6:0]'.
NET y_16;;
  ENM:y_16_1_net.
PIN ballCnt1q<1>;
  BUS:5,
  ENM:'ballCnt1q[6:0]'.
NET y_18;;
  ENM:y_18_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_1;;
  ENM:nReset_c_1_1_net.
PIN ballCnt1q<0>;
  BUS:6,
  ENM:'ballCnt1q[6:0]'.
END.
DEF QUAD_COUNTER_1.
NET nDior_c;;
  ENM:nDior_c_1_net.
PIN P_c<3>;
  BUS:1,
  ENM:'P_c[4:3]'.
NET nReset_c_0;;
  ENM:nReset_c_0_1_net.
PIN P_c<4>;
  BUS:0,
  ENM:'P_c[4:3]'.
NET nDior_c_i_0;;
  ENM:nDior_c_i_0_1_net.
PIN ballCnt1q<0>;
  BUS:6,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt1q<1>;
  BUS:5,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt1q<2>;
  BUS:4,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt1q<3>;
  BUS:3,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt1q<4>;
  BUS:2,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt1q<5>;
  BUS:1,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt1q<6>;
  BUS:0,
  ENM:'ballCnt1q[6:0]'.
NET nReset_c_1;;
  ENM:nReset_c_1_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
END.
DEF myMUX_16_6.
PIN P_c<5>;
  BUS:23,
  ENM:'P_c[28:0]'.
PIN P_c<25>;
  BUS:3,
  ENM:'P_c[28:0]'.
PIN P_c<0>;
  BUS:28,
  ENM:'P_c[28:0]'.
PIN P_c<20>;
  BUS:8,
  ENM:'P_c[28:0]'.
PIN P_c<1>;
  BUS:27,
  ENM:'P_c[28:0]'.
PIN P_c<21>;
  BUS:7,
  ENM:'P_c[28:0]'.
PIN P_c<11>;
  BUS:17,
  ENM:'P_c[28:0]'.
PIN P_c<2>;
  BUS:26,
  ENM:'P_c[28:0]'.
PIN P_c<22>;
  BUS:6,
  ENM:'P_c[28:0]'.
PIN ballCnt0q<2>;
  BUS:4,
  ENM:'ballCnt0q[6:0]'.
PIN P_c<3>;
  BUS:25,
  ENM:'P_c[28:0]'.
PIN P_c<23>;
  BUS:5,
  ENM:'P_c[28:0]'.
PIN ballCnt0q<3>;
  BUS:3,
  ENM:'ballCnt0q[6:0]'.
PIN P_c<4>;
  BUS:24,
  ENM:'P_c[28:0]'.
PIN P_c<24>;
  BUS:4,
  ENM:'P_c[28:0]'.
PIN ballCnt0q<4>;
  BUS:2,
  ENM:'ballCnt0q[6:0]'.
PIN P_c<15>;
  BUS:13,
  ENM:'P_c[28:0]'.
PIN P_c<10>;
  BUS:18,
  ENM:'P_c[28:0]'.
PIN P_c<6>;
  BUS:22,
  ENM:'P_c[28:0]'.
PIN P_c<26>;
  BUS:2,
  ENM:'P_c[28:0]'.
PIN P_c<16>;
  BUS:12,
  ENM:'P_c[28:0]'.
PIN P_c<12>;
  BUS:16,
  ENM:'P_c[28:0]'.
PIN ballCnt2q<2>;
  BUS:4,
  ENM:'ballCnt2q[6:1]'.
PIN P_c<13>;
  BUS:15,
  ENM:'P_c[28:0]'.
PIN ballCnt2q<3>;
  BUS:3,
  ENM:'ballCnt2q[6:1]'.
PIN P_c<14>;
  BUS:14,
  ENM:'P_c[28:0]'.
PIN ballCnt2q<4>;
  BUS:2,
  ENM:'ballCnt2q[6:1]'.
PIN ballCnt0q<0>;
  BUS:6,
  ENM:'ballCnt0q[6:0]'.
PIN ballCnt0q<1>;
  BUS:5,
  ENM:'ballCnt0q[6:0]'.
PIN ballCnt2q<1>;
  BUS:5,
  ENM:'ballCnt2q[6:1]'.
PIN P_c<7>;
  BUS:21,
  ENM:'P_c[28:0]'.
PIN P_c<27>;
  BUS:1,
  ENM:'P_c[28:0]'.
PIN ballCnt1q<2>;
  BUS:4,
  ENM:'ballCnt1q[6:0]'.
PIN P_c<8>;
  BUS:20,
  ENM:'P_c[28:0]'.
PIN P_c<28>;
  BUS:0,
  ENM:'P_c[28:0]'.
PIN ballCnt1q<3>;
  BUS:3,
  ENM:'ballCnt1q[6:0]'.
PIN bCounter_0<2>;
  BUS:1,
  ENM:'bCounter_0[3:1]'.
PIN P_c<9>;
  BUS:19,
  ENM:'P_c[28:0]'.
PIN ballCnt1q<4>;
  BUS:2,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt0q<5>;
  BUS:1,
  ENM:'ballCnt0q[6:0]'.
PIN ballCnt2q<5>;
  BUS:1,
  ENM:'ballCnt2q[6:1]'.
PIN ballCnt0q<6>;
  BUS:0,
  ENM:'ballCnt0q[6:0]'.
PIN ballCnt2q<6>;
  BUS:0,
  ENM:'ballCnt2q[6:1]'.
PIN ballCnt1q<0>;
  BUS:6,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt1q<1>;
  BUS:5,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt3q<1>;
  BUS:5,
  ENM:'ballCnt3q[6:1]'.
PIN P_c<17>;
  BUS:11,
  ENM:'P_c[28:0]'.
PIN ballCnt3q<2>;
  BUS:4,
  ENM:'ballCnt3q[6:1]'.
PIN bCounter_0<3>;
  BUS:0,
  ENM:'bCounter_0[3:1]'.
PIN P_c<18>;
  BUS:10,
  ENM:'P_c[28:0]'.
PIN ballCnt3q<3>;
  BUS:3,
  ENM:'ballCnt3q[6:1]'.
PIN P_c<19>;
  BUS:9,
  ENM:'P_c[28:0]'.
PIN ballCnt3q<4>;
  BUS:2,
  ENM:'ballCnt3q[6:1]'.
PIN ballCnt1q<5>;
  BUS:1,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt3q<5>;
  BUS:1,
  ENM:'ballCnt3q[6:1]'.
PIN bCounter_0<1>;
  BUS:2,
  ENM:'bCounter_0[3:1]'.
PIN ballCnt1q<6>;
  BUS:0,
  ENM:'ballCnt1q[6:0]'.
PIN ballCnt3q<6>;
  BUS:0,
  ENM:'ballCnt3q[6:1]'.
PIN bCounter<2>;
  BUS:1,
  ENM:'bCounter[3:0]'.
PIN dataInput<0>;
  BUS:6,
  ENM:'dataInput[6:0]'.
PIN dataInput<1>;
  BUS:5,
  ENM:'dataInput[6:0]'.
PIN dataInput<2>;
  BUS:4,
  ENM:'dataInput[6:0]'.
PIN dataInput<3>;
  BUS:3,
  ENM:'dataInput[6:0]'.
PIN bCounter<1>;
  BUS:2,
  ENM:'bCounter[3:0]'.
PIN dataInput<4>;
  BUS:2,
  ENM:'dataInput[6:0]'.
PIN dataInput<6>;
  BUS:0,
  ENM:'dataInput[6:0]'.
NET bCounter_0;;
  ENM:bCounter_0_1_net.
PIN bCounter<0>;
  BUS:3,
  ENM:'bCounter[3:0]'.
PIN bCounter<3>;
  BUS:0,
  ENM:'bCounter[3:0]'.
PIN dataInput<5>;
  BUS:1,
  ENM:'dataInput[6:0]'.
END.
DEF myNOISE.
NET y_9;;
  ENM:y_9_1_net.
NET noice_0;;
  ENM:noice_0_1_net.
NET noice_15;;
  ENM:noice_15_1_net.
NET nReset_c_5;;
  ENM:nReset_c_5_1_net.
NET noice_1;;
  ENM:noice_1_1_net.
NET nDior_c;;
  ENM:nDior_c_1_net.
NET nReset_c_4;;
  ENM:nReset_c_4_1_net.
END.
DEF myDFFE2.
NET dd_in_0;;
  ENM:dd_in_0_1_net.
NET dd_in_5;;
  ENM:dd_in_5_1_net.
NET dd_in_6;;
  ENM:dd_in_6_1_net.
NET dd_in_1;;
  ENM:dd_in_1_1_net.
NET dd_in_3;;
  ENM:dd_in_3_1_net.
NET dd_in_4;;
  ENM:dd_in_4_1_net.
NET y_29;;
  ENM:y_29_1_net.
PIN da_c<1>;
  BUS:0,
  ENM:'da_c[1:0]'.
NET y_11;;
  ENM:y_11_1_net.
NET cmd6N_0;;
  ENM:cmd6N_0_1_net.
NET bDevice;;
  ENM:bDevice_1_net.
PIN da_c<0>;
  BUS:1,
  ENM:'da_c[1:0]'.
NET nDiow_c;;
  ENM:nDiow_c_1_net.
NET nReset_c_3;;
  ENM:nReset_c_3_1_net.
NET key0;;
  ENM:key0_1_net.
END.
DEF myFRONTEXTRACTOR_4.
NET riseA_n;;
  ENM:riseA_n_1_net.
NET nDior_c_i_0;;
  ENM:nDior_c_i_0_1_net.
NET nDior_c_i;;
  ENM:nDior_c_i_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_1;;
  ENM:nReset_c_1_1_net.
END.
DEF myFRONTEXTRACTOR_5.
NET nReset_c_2;;
  ENM:nReset_c_2_1_net.
PIN rise<1>;
  BUS:0,
  ENM:'rise[1:0]'.
NET nDior_c_i;;
  ENM:nDior_c_i_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_1;;
  ENM:nReset_c_1_1_net.
PIN rise<0>;
  BUS:1,
  ENM:'rise[1:0]'.
END.
DEF myREVCOUNTER_2.
NET cnt_6_4;;
  ENM:cnt_6_4_1_net.
PIN ballCnt2q<6>;
  BUS:0,
  ENM:'ballCnt2q[6:0]'.
NET s5i;;
  ENM:s5i_1_net.
PIN ballCnt2q<5>;
  BUS:1,
  ENM:'ballCnt2q[6:0]'.
NET s4i;;
  ENM:s4i_1_net.
PIN ballCnt2q<4>;
  BUS:2,
  ENM:'ballCnt2q[6:0]'.
NET cnt_6_1;;
  ENM:cnt_6_1_1_net.
PIN ballCnt2q<3>;
  BUS:3,
  ENM:'ballCnt2q[6:0]'.
NET cnt_6_0;;
  ENM:cnt_6_0_1_net.
PIN ballCnt2q<2>;
  BUS:4,
  ENM:'ballCnt2q[6:0]'.
NET y_20;;
  ENM:y_20_1_net.
PIN ballCnt2q<1>;
  BUS:5,
  ENM:'ballCnt2q[6:0]'.
NET y_22;;
  ENM:y_22_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_2;;
  ENM:nReset_c_2_1_net.
PIN ballCnt2q<0>;
  BUS:6,
  ENM:'ballCnt2q[6:0]'.
END.
DEF QUAD_COUNTER_2.
NET nDior_c;;
  ENM:nDior_c_1_net.
PIN P_c<11>;
  BUS:1,
  ENM:'P_c[12:11]'.
NET nDior_c_i_0;;
  ENM:nDior_c_i_0_1_net.
PIN P_c<12>;
  BUS:0,
  ENM:'P_c[12:11]'.
NET nReset_c_1;;
  ENM:nReset_c_1_1_net.
NET nDior_c_i;;
  ENM:nDior_c_i_1_net.
NET ballCnt2q_1;;
  ENM:ballCnt2q_1_1_net.
NET ballCnt2q_2;;
  ENM:ballCnt2q_2_1_net.
NET ballCnt2q_3;;
  ENM:ballCnt2q_3_1_net.
NET ballCnt2q_4;;
  ENM:ballCnt2q_4_1_net.
NET ballCnt2q_5;;
  ENM:ballCnt2q_5_1_net.
NET ballCnt2q_6;;
  ENM:ballCnt2q_6_1_net.
NET nReset_c_2;;
  ENM:nReset_c_2_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
END.
DEF myFRONTEXTRACTOR_6.
NET riseA_n;;
  ENM:riseA_n_1_net.
NET nDior_c_i;;
  ENM:nDior_c_i_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_2;;
  ENM:nReset_c_2_1_net.
END.
DEF myFRONTEXTRACTOR_7.
PIN rise<1>;
  BUS:0,
  ENM:'rise[1:0]'.
NET nDior_c_i;;
  ENM:nDior_c_i_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_2;;
  ENM:nReset_c_2_1_net.
PIN rise<0>;
  BUS:1,
  ENM:'rise[1:0]'.
END.
DEF myREVCOUNTER_3.
NET cnt_6_4;;
  ENM:cnt_6_4_1_net.
PIN ballCnt3q<6>;
  BUS:0,
  ENM:'ballCnt3q[6:0]'.
NET s5i;;
  ENM:s5i_1_net.
PIN ballCnt3q<5>;
  BUS:1,
  ENM:'ballCnt3q[6:0]'.
NET s4i;;
  ENM:s4i_1_net.
PIN ballCnt3q<4>;
  BUS:2,
  ENM:'ballCnt3q[6:0]'.
NET cnt_6_1;;
  ENM:cnt_6_1_1_net.
PIN ballCnt3q<3>;
  BUS:3,
  ENM:'ballCnt3q[6:0]'.
NET cnt_6_0;;
  ENM:cnt_6_0_1_net.
PIN ballCnt3q<2>;
  BUS:4,
  ENM:'ballCnt3q[6:0]'.
NET y_24;;
  ENM:y_24_1_net.
NET nReset_c_3;;
  ENM:nReset_c_3_1_net.
PIN ballCnt3q<1>;
  BUS:5,
  ENM:'ballCnt3q[6:0]'.
NET y_26;;
  ENM:y_26_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_2;;
  ENM:nReset_c_2_1_net.
PIN ballCnt3q<0>;
  BUS:6,
  ENM:'ballCnt3q[6:0]'.
END.
DEF QUAD_COUNTER_3.
NET nDior_c;;
  ENM:nDior_c_1_net.
PIN P_c<13>;
  BUS:1,
  ENM:'P_c[14:13]'.
PIN P_c<14>;
  BUS:0,
  ENM:'P_c[14:13]'.
NET nDior_c_i;;
  ENM:nDior_c_i_1_net.
NET ballCnt3q_1;;
  ENM:ballCnt3q_1_1_net.
NET ballCnt3q_2;;
  ENM:ballCnt3q_2_1_net.
NET ballCnt3q_3;;
  ENM:ballCnt3q_3_1_net.
NET ballCnt3q_4;;
  ENM:ballCnt3q_4_1_net.
NET ballCnt3q_5;;
  ENM:ballCnt3q_5_1_net.
NET ballCnt3q_6;;
  ENM:ballCnt3q_6_1_net.
NET nReset_c_2;;
  ENM:nReset_c_2_1_net.
NET nReset_c_3;;
  ENM:nReset_c_3_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
END.
DEF myDFFE2_2.
PIN dd_in<3>;
  BUS:4,
  ENM:'dd_in[7:0]'.
PIN dd_in<0>;
  BUS:7,
  ENM:'dd_in[7:0]'.
PIN dd_in<5>;
  BUS:2,
  ENM:'dd_in[7:0]'.
PIN dd_in<1>;
  BUS:6,
  ENM:'dd_in[7:0]'.
NET cmd6N_0;;
  ENM:cmd6N_0_1_net.
PIN da_c<1>;
  BUS:0,
  ENM:'da_c[1:0]'.
NET y_10;;
  ENM:y_10_1_net.
NET bDevice;;
  ENM:bDevice_1_net.
PIN da_c<0>;
  BUS:1,
  ENM:'da_c[1:0]'.
PIN dd_in<6>;
  BUS:1,
  ENM:'dd_in[7:0]'.
PIN dd_in<4>;
  BUS:3,
  ENM:'dd_in[7:0]'.
PIN dd_in<7>;
  BUS:0,
  ENM:'dd_in[7:0]'.
PIN dd_in<2>;
  BUS:5,
  ENM:'dd_in[7:0]'.
NET nDiow_c;;
  ENM:nDiow_c_1_net.
NET nReset_c_4;;
  ENM:nReset_c_4_1_net.
NET key2;;
  ENM:key2_1_net.
END.
DEF myFRONTEXTRACTOR.
NET riseA_n;;
  ENM:riseA_n_1_net.
NET nDior_c_i_0;;
  ENM:nDior_c_i_0_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_0;;
  ENM:nReset_c_0_1_net.
END.
DEF myFRONTEXTRACTOR_1.
PIN rise<1>;
  BUS:0,
  ENM:'rise[1:0]'.
NET nDior_c_i_0;;
  ENM:nDior_c_i_0_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_0;;
  ENM:nReset_c_0_1_net.
PIN rise<0>;
  BUS:1,
  ENM:'rise[1:0]'.
END.
DEF myREVCOUNTER.
NET cnt_6_4;;
  ENM:cnt_6_4_1_net.
PIN ballCnt0q<6>;
  BUS:0,
  ENM:'ballCnt0q[6:0]'.
NET s5i;;
  ENM:s5i_1_net.
PIN ballCnt0q<5>;
  BUS:1,
  ENM:'ballCnt0q[6:0]'.
NET s4i;;
  ENM:s4i_1_net.
PIN ballCnt0q<4>;
  BUS:2,
  ENM:'ballCnt0q[6:0]'.
NET cnt_6_1;;
  ENM:cnt_6_1_1_net.
PIN ballCnt0q<3>;
  BUS:3,
  ENM:'ballCnt0q[6:0]'.
NET cnt_6_0;;
  ENM:cnt_6_0_1_net.
PIN ballCnt0q<2>;
  BUS:4,
  ENM:'ballCnt0q[6:0]'.
NET y_12;;
  ENM:y_12_1_net.
PIN ballCnt0q<1>;
  BUS:5,
  ENM:'ballCnt0q[6:0]'.
NET y_14;;
  ENM:y_14_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
NET nReset_c_0;;
  ENM:nReset_c_0_1_net.
PIN ballCnt0q<0>;
  BUS:6,
  ENM:'ballCnt0q[6:0]'.
END.
DEF QUAD_COUNTER.
NET nDior_c;;
  ENM:nDior_c_1_net.
PIN P_c<1>;
  BUS:1,
  ENM:'P_c[2:1]'.
PIN P_c<2>;
  BUS:0,
  ENM:'P_c[2:1]'.
NET nDior_c_i_0;;
  ENM:nDior_c_i_0_1_net.
PIN ballCnt0q<0>;
  BUS:6,
  ENM:'ballCnt0q[6:0]'.
PIN ballCnt0q<1>;
  BUS:5,
  ENM:'ballCnt0q[6:0]'.
PIN ballCnt0q<2>;
  BUS:4,
  ENM:'ballCnt0q[6:0]'.
PIN ballCnt0q<3>;
  BUS:3,
  ENM:'ballCnt0q[6:0]'.
PIN ballCnt0q<4>;
  BUS:2,
  ENM:'ballCnt0q[6:0]'.
PIN ballCnt0q<5>;
  BUS:1,
  ENM:'ballCnt0q[6:0]'.
PIN ballCnt0q<6>;
  BUS:0,
  ENM:'ballCnt0q[6:0]'.
NET nReset_c_0;;
  ENM:nReset_c_0_1_net.
NET clk_c;;
  ENM:clk_c_1_net.
END.
DEF myDFFE.
NET csDevReg;;
  ENM:csDevReg_1_net.
NET nDiow_c;;
  ENM:nDiow_c_1_net.
NET nReset_c_3;;
  ENM:nReset_c_3_1_net.
NET bDevice;;
  ENM:bDevice_1_net.
END.
DEF my4COUNTER.
PIN bCounter_0<1>;
  BUS:2,
  ENM:'bCounter_0[3:1]'.
PIN bCounter_0<2>;
  BUS:1,
  ENM:'bCounter_0[3:1]'.
PIN bCounter_0<3>;
  BUS:0,
  ENM:'bCounter_0[3:1]'.
PIN bCounter<2>;
  BUS:1,
  ENM:'bCounter[3:0]'.
NET y_28;;
  ENM:y_28_1_net.
PIN bCounter<1>;
  BUS:2,
  ENM:'bCounter[3:0]'.
NET bCounter_0;;
  ENM:bCounter_0_1_net.
PIN bCounter<0>;
  BUS:3,
  ENM:'bCounter[3:0]'.
NET csDataReg;;
  ENM:csDataReg_1_net.
NET nDior_c;;
  ENM:nDior_c_1_net.
NET y_62;;
  ENM:y_62_1_net.
PIN bCounter<3>;
  BUS:0,
  ENM:'bCounter[3:0]'.
END.
DEF jamma.
NET clk;;
  ENM:clk_1_net.
NET nReset;;
  ENM:nReset_1_net.
PIN da<0>;
  BUS:2,
  ENM:'da[2:0]'.
PIN da<1>;
  BUS:1,
  ENM:'da[2:0]'.
PIN da<2>;
  BUS:0,
  ENM:'da[2:0]'.
NET nDiow;;
  ENM:nDiow_1_net.
NET nDior;;
  ENM:nDior_1_net.
NET nCS0;;
  ENM:nCS0_1_net.
NET nCS1;;
  ENM:nCS1_1_net.
NET iordy;;
  ENM:iordy_1_net.
PIN dd<0>;
  BUS:7,
  ENM:'dd[7:0]'.
PIN dd<1>;
  BUS:6,
  ENM:'dd[7:0]'.
PIN dd<2>;
  BUS:5,
  ENM:'dd[7:0]'.
PIN dd<3>;
  BUS:4,
  ENM:'dd[7:0]'.
PIN dd<4>;
  BUS:3,
  ENM:'dd[7:0]'.
PIN dd<5>;
  BUS:2,
  ENM:'dd[7:0]'.
PIN dd<6>;
  BUS:1,
  ENM:'dd[7:0]'.
PIN dd<7>;
  BUS:0,
  ENM:'dd[7:0]'.
PIN CoinCounter<1>;
  BUS:1,
  ENM:'CoinCounter[2:1]'.
PIN CoinCounter<2>;
  BUS:0,
  ENM:'CoinCounter[2:1]'.
PIN CoinLockout<1>;
  BUS:1,
  ENM:'CoinLockout[2:1]'.
PIN CoinLockout<2>;
  BUS:0,
  ENM:'CoinLockout[2:1]'.
PIN P<0>;
  BUS:28,
  ENM:'P[28:0]'.
PIN P<1>;
  BUS:27,
  ENM:'P[28:0]'.
PIN P<2>;
  BUS:26,
  ENM:'P[28:0]'.
PIN P<3>;
  BUS:25,
  ENM:'P[28:0]'.
PIN P<4>;
  BUS:24,
  ENM:'P[28:0]'.
PIN P<5>;
  BUS:23,
  ENM:'P[28:0]'.
PIN P<6>;
  BUS:22,
  ENM:'P[28:0]'.
PIN P<7>;
  BUS:21,
  ENM:'P[28:0]'.
PIN P<8>;
  BUS:20,
  ENM:'P[28:0]'.
PIN P<9>;
  BUS:19,
  ENM:'P[28:0]'.
PIN P<10>;
  BUS:18,
  ENM:'P[28:0]'.
PIN P<11>;
  BUS:17,
  ENM:'P[28:0]'.
PIN P<12>;
  BUS:16,
  ENM:'P[28:0]'.
PIN P<13>;
  BUS:15,
  ENM:'P[28:0]'.
PIN P<14>;
  BUS:14,
  ENM:'P[28:0]'.
PIN P<15>;
  BUS:13,
  ENM:'P[28:0]'.
PIN P<16>;
  BUS:12,
  ENM:'P[28:0]'.
PIN P<17>;
  BUS:11,
  ENM:'P[28:0]'.
PIN P<18>;
  BUS:10,
  ENM:'P[28:0]'.
PIN P<19>;
  BUS:9,
  ENM:'P[28:0]'.
PIN P<20>;
  BUS:8,
  ENM:'P[28:0]'.
PIN P<21>;
  BUS:7,
  ENM:'P[28:0]'.
PIN P<22>;
  BUS:6,
  ENM:'P[28:0]'.
PIN P<23>;
  BUS:5,
  ENM:'P[28:0]'.
PIN P<24>;
  BUS:4,
  ENM:'P[28:0]'.
PIN P<25>;
  BUS:3,
  ENM:'P[28:0]'.
PIN P<26>;
  BUS:2,
  ENM:'P[28:0]'.
PIN P<27>;
  BUS:1,
  ENM:'P[28:0]'.
PIN P<28>;
  BUS:0,
  ENM:'P[28:0]'.
END.
